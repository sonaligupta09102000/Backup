package com.springcrud.crudinspring;

import java.io.File;
import java.io.IOException;
import java.util.Base64;

import org.apache.commons.io.FileUtils;
import org.springframework.stereotype.Component;

@Component
public class Image {

	public static void fileToBase64StringConversion() throws IOException {

		byte[] fileContent = FileUtils.readFileToByteArray(new File("src\\main\\resources\\static\\1.jpg"));
		String encodedString = Base64.getEncoder().encodeToString(fileContent);
		System.out.println(encodedString);
	}

//	public static String encodeToString(BufferedImage image, String type) {
//        String imageString = "C:\\Users\\sonali.gupta\\Downloads";
//        ByteArrayOutputStream bos = new ByteArrayOutputStream();
// 
//        try {
//            ImageIO.write(image, type, bos);
//            byte[] imageBytes = bos.toByteArray();
// 
//            BASE64Encoder encoder = new BASE64Encoder();
//            imageString = encoder.encode(imageBytes);
// 
//            bos.close();
//        } catch (IOException e) {
//            e.printStackTrace();
//        }
//        return imageString;
//    }
//	
//	public static BufferedImage decodeToImage(String imageString) {
//		 
//        BufferedImage image = null;
//        byte[] imageByte;
//        try {
//            BASE64Decoder decoder = new BASE64Decoder();
//            imageByte = decoder.decodeBuffer(imageString);
//            ByteArrayInputStream bis = new ByteArrayInputStream(imageByte);
//            image = ImageIO.read(bis);
//            bis.close();
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//        return image;
//    }

//	public void convertStringToImage(String base64) {
//        try {
//            byte[] imageByteArray = decodeImage(base64);
//
//            FileOutputStream imageOutFile = new FileOutputStream("./src/main/resources/demo.jpg");
//            imageOutFile.write(imageByteArray);
//            imageOutFile.close();
//        } catch (Exception e) {
//            Logger.log(Level.SEVERE, "ImageStoreManager::convertStringToImage()" + e);
//        }
//    }
//
//
//    public static byte[] decodeImage(String imageDataString) {
//        return Base64.decodeBase64(imageDataString);
//    }

//	public static void imageEncoderDecoder() throws IOException {
//
//	    // image path declaration
//	    String imgPath = "src\\main\\resources\\static\\1.jpg";
//
//	    // read image from file
//	    FileInputStream stream = new FileInputStream(imgPath);
//
//	    // get byte array from image stream
//	    int bufLength = 2048;
//	    byte[] buffer = new byte[2048];
//	    byte[] data;
//
//	    ByteArrayOutputStream out = new ByteArrayOutputStream();
//	    int readLength;
//	    while ((readLength = stream.read(buffer, 0, bufLength)) != -1) {
//	        out.write(buffer, 0, readLength);
//	    }
//
//	    data = out.toByteArray();
//	    String imageString = Base64.getEncoder().withoutPadding().encodeToString(data);
//	   byte[] decodeImg = Base64.getDecoder().decode(imageString);
//	    out.close();
//	    stream.close();
//
//	     System.out.println("Encode Image Result : " + imageString);
//	    //System.out.println("Decode Image Result : " + Arrays.toString(decodeImg));
//	}
}
